,-----------.
| variables |
'-----------'
    var ou let    // para declarar uma variável
    var nome = 'Matheus'
    var idade = 29
    var status = true
---------------------------------------------------
,-----------------.
| primitive types |
'-----------------'
    number -> 5, 18, -12 | 0.5, -15.9, 3.14
        Infinity ->
        NaN ->
    string -> "Google", 'JavaScript', `Rayssa`
    boolean -> true, false
    null ->
    undefined ->
    object ->
        Array ->
    function

    command: typeof    // para descobrir o tipo de dados de alguma variável
        var n = 18
        typeof n
-------------------------------------------------------------------------------
,---------------.
| data handling |
'---------------'
    CONVERSÃO
        string -> number
            Number.parseInt(n)      // converte para Int
            Number.parseFloat(n)    // converte para Float
            Number                  // converte automático
    
    CONVERSÃO
        number -> string
            String(n)       // converte para String
            n.toString()    // converte para String

    TEMPLATE STRING
        var n1 = Number.parseInt(window.prompt('Digite um número: '))
        var n2 = Number.parseInt(window.prompt('Digite outro número: '))
        var s = n1 + n2
        window.alert(`A soma de ${n1} + ${n2} é: ${s}`)    // exemplo de template string

    FORMATANDO STRINGS
        var s = 'JavaScript'
            s.length           // quantidade de caracteres
            s.toUpperCase()    // tudo para MAIÚSCULAS
            s.toLowerCase()    // tudo para minúsculas

    FORMATANDO NÚMEROS
        var n = 1543.5
            n.toFixed(2)                                                       // casas após a vírgula
            n.toFixed(2).replace('.', ',')                                     // trocar o . por ,
            n.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})    // tipo de moeda local
                // 'BRL' = Real Brasileiro
                // 'USD' = Dólar Americano
                // 'EUR' = Euro Europeu
------------------------------------------------------------------------------------------------------
,-----------.
| operators |
'-----------'
    ARITMÉTICOS
        5 + 2 = 7             // adição
        5 - 2 = 3             // subtração
        5 * 2 = 10            // multiplicação
        5 / 2 = 2.5           // divisão
        5 % 2 = 1             // resto da divisão
        5 ** 2 = 25           // potenciação
        5 + 3 / 2 = 6.5
        (5 + 3) / 2 = 4

    PRECEDÊNCIA
        ()
        **
        * / %
        + -

    ATRIBUIÇÃO SIMPLES
        var a = 5 + 3
        > 8
        var b = a % 5
        > 3
        var c = 5 * b ** 2
        > 45
        var d = 10 - a / 2
        > 6
        var e = 6 * 2 / d
        > 2
        var f = b % e + 4 / e
        > 3

    AUTO-ATRIBUIÇÕES
        var n = 3
        n = n + 4
        > 7
        n = n - 5
        > 2
        n = n * 4
        > 8
        n = n / 2
        > 4
        n = n ** 2
        > 16
        n = n % 5
        > 1

    SIMPLIFICANDO
        n += 4
        n -= 5
        n *= 4
        n /= 2
        n **= 2
        n %= 5

    INCREMENTO
        x = x + 1   |   x ++
        x = x - 1   |   x --

    RELACIONAIS
        5 > 2               // maior
        > true
        7 < 4               // menor
        > false
        8 >= 8              // maior ou igual
        > true
        9 <= 7              // menor ou igual
        > false
        5 == 5              // igual
        > true
        4 != 4              // diferente
        > false

    IDENTIDADE
        5 == 5
        > true
        5 == '5'            // mesma grandeza tipos iguais ou diferentes
        > true
        5 === '5'           // mesmo valor e mesmo tipo -> identidade -> === ou !==
        > false
        5 === 5
        > true

    LÓGICOS na ordem de PRECEDÊNCIA
        !                   // negação
        &&                  // conjunção
        ||                  // disjunção

    PRECEDÊNCIA em uma expressão
        aritméticos
        () ** */% +-
        relacionais
        > < >= <= == !=         // sem precedência entre eles
        lógicos
        ! && ||

    TERNÁRIO
        ?
        :
        teste ? true : false
        var m = 5.5
        m > 7? 'aprovado' : 'reprovado'
        > 'reprovado'
--------------------------------------------------------------
,---------------------.
| introduction to DOM |
'---------------------'
    instalar as seguintes extensões no vscode
    watch in chrome     -> foi descontinuada, então... 
    live server         -> instalar também no google chrome
    node.js exec

    ÁRVORE DOM
        window
            location
            document
                html
                    head
                        meta
                        title
                        ...
                    body
                        h1
                        p
                            strong
                        div
                        ...
            history
    
    SELECIONANDO
        POR MARCA
            getElementsByTagName()
        POR ID
            getElementsByTagID()
        POR NOME
            getElementsByName()
        POR CLASSE
            getElementsByClassName()
        POR SELETOR
            querySelector()
            querySelectorAll()
        
        /* var corpo = window.document.body
           var p1 = window.document.getElementsByTagName('p')[1]
           p1.style.color = 'blue'
           corpo.style.background = 'darkred'
           window.document.write(p1.innerHTML) */
        // innerText = apenas texto
        // innerHTML = texto com as tags
        /* var d = window.document.getElementById('msg')
           d.style.background = 'green'
           d.innerText = 'Estou aguardando...' */
        // ...
        // div é representada por #, classe por .
        /* var d = window.document.querySelector('div#msg')
           d.style.background = 'yellow'
           d.style.color = 'black' */
---------------------------------------------------------------------





